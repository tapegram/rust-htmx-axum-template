use axum::{
    extract::{self, State},
    response::{Html, IntoResponse},
    routing::get,
    Form, Router,
};
use axum_flash::Flash;
use http::StatusCode;
use rscx::html;
use serde::Deserialize;

use web_client::server::{
    headers::SecondaryHeader,
    modal::{Modal, ModalSize},
};

use crate::{components::page::PageLayout, routes, state::WebHtmxState};

pub fn {{snakeCase resource_name}}_routes(state: WebHtmxState) -> Router {
    Router::new()
        .route(
            routes::{{constantCase resource_name}}, 
            get(get_{{snakeCase resource_name}})
        )
        .route(
            routes::{{constantCase resource_name}}_EDIT_FORM,
            get(get_edit_form).post(post_edit_form),
        )
        .with_state(state)
}

async fn get_{{snakeCase resource_name}}(
    extract::Path((id)): extract::Path<(
        String,
    )>,
    State(state): State<WebHtmxState>,
) -> impl IntoResponse {
  todo!()
}

async fn get_edit_form(
    extract::Path(id): extract::Path<String>,
    State(state): State<WebHtmxState>,
) -> impl IntoResponse {
    Html(html! {
        <PageLayout
            header="Edit User"
        >
            <Modal size=ModalSize::MediumScreen>
                <SecondaryHeader
                    title="Edit {{pascalCase resource_name}}"
                    subtitle="Make changes to the {{pascalCase resource_name}} below."
                />
                <p>Add form here!</p>
            </Modal>
        </PageLayout>
    })
}

#[derive(Deserialize, Debug)]
struct Update{{pascalCase resource_name}}FormData {
    foo: String
}

async fn post_edit_form(
    extract::Path(id): extract::Path<String>,
    State(state): State<WebHtmxState>,
    flash: Flash,
    Form(form): Form<Update{{pascalCase resource_name}}FormData>,
) -> impl IntoResponse {
    (
        StatusCode::OK,
        flash.success("Updated {{pascalCase resource_name}} successfully!"),
        [
            ("hx-redirect", routes::{{snakeCase resource_name_plural}}()),
            ("hx-retarget", "body".into()),
        ],
    )
}
